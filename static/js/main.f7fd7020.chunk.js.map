{"version":3,"sources":["components/Post.js","components/main.js","components/BookmarksPage.js","components/EnterPage.js","App.js","serviceWorker.js","index.js"],"names":["Post","props","state","id","content","title","source","cover","textColor","postColor","views","comms","reps","likes","data","this","text","length","substring","markup","className","style","backgroundColor","textDecoration","color","href","src","alt","React","Component","VK","window","Main","posts","colors","postsLoad","postColors","getPosts","bind","getRandom","getBestPhoto","loadPosts","goTo","to","document","getElementById","scrollIntoView","block","behavior","Api","call","owner_id","offset","count","v","r","response","console","log","items","map","post","copy_history","marked_as_ads","i","photo","comments","reposts","video","push","setState","item","best","res","nums","attachments","key","indexOf","str","Math","max","apply","min","rand","random","round","obj","openRequest","indexedDB","open","store","onupgradeneeded","DB","result","objectStoreNames","contains","createObjectStore","onerror","error","onsuccess","tx","transaction","objectStore","get","oncomplete","savedPosts","onPostSave","savePost","onPostDelete","deletePost","postLoading","role","float","onClick","posts1","posts2","data-toggle","data-target","e","BookmarksPage","getPostsFromStorage","setPosts","updateDB","onTurnBar","StoreData","index","findIndex","splice","put","list","fontSize","EnterPage","VkAuth","Auth","login","session","onAuth","class","App","isAuth","setAuth","getLoginStatus","status","page","exact","path","turnBar","tabIndex","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f7fd7020.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: this.props.content.id,\r\n      title: this.props.content.title,\r\n      source: this.props.content.source,\r\n      cover: this.props.content.cover,\r\n      textColor: this.props.content.textColor,\r\n      postColor: this.props.content.postColor,\r\n      views: this.props.content.views,\r\n      comms: this.props.content.comms,\r\n      reps: this.props.content.reps,\r\n      likes: this.props.content.likes,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let data = this.props.content;\r\n\r\n    let title = \"\";\r\n\r\n    if (data.title) {\r\n      let text = data.title;\r\n      title = text.length > 200 ? text.substring(0, 200) + \"...\" : text;\r\n    }\r\n\r\n    const markup = (\r\n      <div\r\n        className=\"postView card\"\r\n        style={{ backgroundColor: data.postColor }}\r\n      >\r\n        <div className=\"postHeader\">\r\n          <div className=\"postViews\">\r\n            <i className=\"fas fa-eye\"></i>\r\n            {\"  \"}\r\n            {data.views}\r\n          </div>\r\n          <button className=\"postReadBtn\">\r\n            <a\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              href={data.source}\r\n            >\r\n              читать\r\n            </a>\r\n          </button>\r\n        </div>\r\n        {title.length ? (\r\n          <div className=\"postTitle\" style={{ color: data.textColor }}>\r\n            {title}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {data.cover ? (\r\n          <a className=\"linkStyle\" href={data.source}>\r\n            <img className=\"postCover\" src={data.cover} alt=\"Обложка записи\" />\r\n          </a>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"postFooter\">\r\n          <div className=\"postCounts\">\r\n            <i className=\"fas fa-heart\"></i> {data.likes}\r\n          </div>\r\n          <div className=\"postCounts\">\r\n            <i className=\"fas fa-comment\"></i> {data.comms}\r\n          </div>\r\n          <div className=\"postCounts\">\r\n            <i className=\"fas fa-reply\"></i> {data.reps}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return <div>{markup}</div>;\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Post from \"./Post\";\r\n\r\nconst VK = window.VK;\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      colors: [],\r\n\r\n      postsLoad: true,\r\n    };\r\n\r\n    this.postColors = [\r\n      \"#FFA69E\",\r\n      \"#74F2CE\",\r\n      \"#7EE8FA\",\r\n      \"#E899DC\",\r\n      \"#FFAC81\",\r\n      \"#F7B42C\",\r\n      \"#ABE9CD\",\r\n      \"#F8CEEC\",\r\n      \"#FFD8C\",\r\n      \"#B0F3F1\",\r\n      \"#DAD2F3\",\r\n      \"#F3E6E8\",\r\n      \"#D5FEFD\",\r\n      \"#DCF8EF\",\r\n      \"#7DDFF8\",\r\n      \"#B9D1EB\",\r\n      \"#A1BAFE\",\r\n      \"#E1D4E6\",\r\n      \"#FFA69E\",\r\n      \"#00BFB2\",\r\n      \"#FF4081\",\r\n      \"#A29BFE\",\r\n      \"#7ED6DF\",\r\n      \"#48DBFB\",\r\n      \"#FF6B6B\",\r\n    ];\r\n\r\n    this.getPosts = this.getPosts.bind(this);\r\n    this.getRandom = this.getRandom.bind(this);\r\n    this.getBestPhoto = this.getBestPhoto.bind(this);\r\n    this.loadPosts = this.loadPosts.bind(this);\r\n    this.goTo = this.goTo.bind(this);\r\n  }\r\n\r\n  goTo(to) {\r\n    let target = document.getElementById(to);\r\n\r\n    target.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.authBtn.current.click();\r\n\r\n    this.loadPosts();\r\n  }\r\n\r\n  loadPosts() {\r\n    let posts = [];\r\n\r\n    VK.Api.call(\r\n      \"wall.get\",\r\n      { owner_id: \"-173711218\", offset: 1, count: 40, v: \"5.73\" },\r\n      (r) => {\r\n        if (r.response) {\r\n          console.log(r.response.items);\r\n\r\n          posts = r.response.items.map((post) => {\r\n            if (!post.copy_history && !post.marked_as_ads) {\r\n              let i = this.getRandom(0, this.postColors.length - 1);\r\n              let color = this.postColors[i];\r\n              let photo = this.getBestPhoto(post);\r\n              let data = {\r\n                title: post.text,\r\n                postColor: color,\r\n                textColor: \"rgba(0, 0, 0, 0.8)\",\r\n                id: `${post.id}`,\r\n                source: `https://vk.com/wall${post.owner_id}_${post.id}`,\r\n                cover: photo,\r\n                views: post.views.count,\r\n                likes: post.likes.count,\r\n                comms: post.comments.count,\r\n                reps: post.reposts.count,\r\n                video: false,\r\n              };\r\n              posts.push(data);\r\n              this.setState({ posts, postsLoad: false });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getBestPhoto(item) {\r\n    let best = \"\";\r\n    let res = \"\";\r\n    let nums = [];\r\n\r\n    if (item.attachments && item.attachments[0] && item.attachments[0].photo) {\r\n      for (let key in item.attachments[0].photo) {\r\n        if (~key.indexOf(\"photo_\")) {\r\n          let str = key.substring(6);\r\n          nums.push(str);\r\n        }\r\n      }\r\n\r\n      best = \"photo_\" + Math.max.apply(null, nums);\r\n      res = item.attachments[0].photo[best];\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  getRandom(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n\r\n    return Math.round(rand);\r\n  }\r\n\r\n  getPostsFromStorage(obj) {\r\n    let openRequest = indexedDB.open(obj.store, 1);\r\n\r\n    openRequest.onupgradeneeded = () => {\r\n      let DB = openRequest.result;\r\n      if (!DB.objectStoreNames.contains(obj.store)) {\r\n        DB.createObjectStore(obj.store);\r\n      }\r\n    };\r\n\r\n    openRequest.onerror = function () {\r\n      console.error(\"Can't create DB\", openRequest.error);\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      let DB = openRequest.result;\r\n\r\n      let tx = DB.transaction(obj.store, \"readonly\");\r\n      let store = tx.objectStore(obj.store);\r\n\r\n      let posts = store.get(obj.key);\r\n\r\n      tx.oncomplete = () => {\r\n        if (posts.result) {\r\n          this.setState({ savedPosts: posts.result });\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  getPosts() {\r\n    let posts = this.state.posts;\r\n    let response = [];\r\n\r\n    response = posts.map((post, i) => {\r\n      return (\r\n        <Post\r\n          key={post.title + i}\r\n          content={post}\r\n          onPostSave={this.savePost}\r\n          onPostDelete={this.deletePost}\r\n        ></Post>\r\n      );\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  render() {\r\n    let posts = this.state.posts && this.getPosts();\r\n\r\n    let postLoading = this.state.postsLoad ? (\r\n      <div className=\"spinner-border\" role=\"status\"></div>\r\n    ) : (\r\n      <div style={{ float: \"right\" }} onClick={this.loadPosts}>\r\n        <i className=\"fas fa-redo\"></i>\r\n      </div>\r\n    );\r\n\r\n    let posts1 = [];\r\n    let posts2 = [];\r\n\r\n    for (let i = 0; i < posts.length; i++) {\r\n      if (i % 2 !== 0) posts1.push(posts[i]);\r\n      else posts2.push(posts[i]);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"pageHint\" id=\"Home\">\r\n          меню группы\r\n        </div>\r\n        <div className=\"row mt-4 mb-2\">\r\n          <div className=\"col\">\r\n              <div className=\"icon\" data-toggle=\"modal\" data-target=\"#aboutModal\">\r\n                <i className=\"fas fa-info-circle\"></i>\r\n                <span className=\"iconTitle\">о группе</span>\r\n              </div>\r\n          </div>\r\n          <div className=\"col\">\r\n          <a href=\"https://vk.com/app5748831_-173711218\" className=\"linkStyle\">\r\n              <div className=\"icon\">\r\n                <i className=\"fas fa-paper-plane\"></i>\r\n                <span className=\"iconTitle\">рассылка</span>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div className=\"col\">\r\n            <a href=\"https://vk.com/app5727453_-173711218\" className=\"linkStyle\">\r\n              <div className=\"icon\">\r\n                <i className=\"fas fa-cookie-bite\"></i>\r\n                <span className=\"iconTitle\">пожертвовать</span>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"btnsTitle\">Последние записи {postLoading}</div>\r\n        <div className=\"row mt-2 mb-3\">\r\n          <div className=\"col\">{posts1}</div>\r\n          <div className=\"col\">{posts2}</div>\r\n        </div>\r\n        {!this.state.postsLoad ? (\r\n          <button className=\"loadMoreBtn\" onClick={(e) => this.goTo(\"Home\", e)}>\r\n            наверх\r\n          </button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nimport Post from \"./Post\";\r\n\r\nclass BookmarksPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n    };\r\n\r\n    this.getPostsFromStorage = this.getPostsFromStorage.bind(this);\r\n    this.setPosts = this.setPosts.bind(this);\r\n    this.deletePost = this.deletePost.bind(this);\r\n    this.savePost = this.savePost.bind(this);\r\n    this.updateDB = this.updateDB.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let obj = {\r\n      store: \"may-app\",\r\n      key: \"bookmarks\",\r\n    };\r\n\r\n    this.getPostsFromStorage(obj);\r\n\r\n    this.props.onTurnBar(false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onTurnBar(true);\r\n  }\r\n\r\n  getPostsFromStorage(obj) {\r\n    let openRequest = indexedDB.open(obj.store, 1);\r\n\r\n    openRequest.onupgradeneeded = () => {\r\n      let DB = openRequest.result;\r\n      if (!DB.objectStoreNames.contains(obj.store)) {\r\n        DB.createObjectStore(obj.store);\r\n      }\r\n    };\r\n\r\n    openRequest.onerror = function () {\r\n      console.error(\"Can't create DB\", openRequest.error);\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      let DB = openRequest.result;\r\n\r\n      let tx = DB.transaction(obj.store, \"readonly\");\r\n      let store = tx.objectStore(obj.store);\r\n\r\n      let posts = store.get(obj.key);\r\n\r\n      tx.oncomplete = () => {\r\n        if (posts.result) {\r\n          this.setState({ posts: posts.result });\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  savePost(post) {\r\n    let posts = this.state.posts;\r\n\r\n    posts.push(post);\r\n\r\n    this.setState({ savedPosts: posts }, () => {\r\n      let data = this.state.posts;\r\n\r\n      let StoreData = {\r\n        store: \"may-app\",\r\n        key: \"bookmarks\",\r\n        data,\r\n      };\r\n\r\n      this.updateDB(StoreData);\r\n    });\r\n  }\r\n\r\n  deletePost(id) {\r\n    let posts = this.state.posts;\r\n    let index;\r\n\r\n    if (posts) {\r\n      index = posts.findIndex((post) => id === post.id);\r\n\r\n      if (~index) {\r\n        posts.splice(index, 1);\r\n\r\n        this.setState({ savedPosts: posts }, () => {\r\n          let data = this.state.posts;\r\n\r\n          let StoreData = {\r\n            store: \"may-app\",\r\n            key: \"bookmarks\",\r\n            data,\r\n          };\r\n\r\n          this.updateDB(StoreData);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  setPosts() {\r\n    let posts = this.state.posts;\r\n\r\n    let response = posts.map((post) => {\r\n      return (\r\n        <Post\r\n          key={post.id}\r\n          content={post}\r\n          savedPosts={posts}\r\n          onPostSave={this.savePost}\r\n          onPostDelete={this.deletePost}\r\n        />\r\n      );\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  updateDB(obj) {\r\n    let openRequest = indexedDB.open(obj.store, 1);\r\n\r\n    openRequest.onupgradeneeded = () => {\r\n      let DB = openRequest.result;\r\n      if (!DB.objectStoreNames.contains(obj.store)) {\r\n        DB.createObjectStore(obj.store);\r\n      }\r\n    };\r\n\r\n    openRequest.onerror = function () {\r\n      console.error(\"Can't create DB\", openRequest.error);\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      let DB = openRequest.result;\r\n\r\n      let tx = DB.transaction(obj.store, \"readwrite\");\r\n      let store = tx.objectStore(obj.store);\r\n\r\n      store.put(obj.data, obj.key);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let posts = this.setPosts();\r\n    let list = posts.length ? (\r\n      posts\r\n    ) : (\r\n      <div className=\"pageHint\">\r\n        Список закладок пуст\r\n        <br/>\r\n        <div style={{ fontSize: '50px' }}><i className=\"fas fa-bookmark\"></i></div>\r\n      </div>\r\n    );\r\n\r\n    return <div>{list}</div>;\r\n  }\r\n}\r\n\r\nexport default BookmarksPage;\r\n","import React from \"react\";\r\n\r\nconst VK = window.VK;\r\n\r\nclass EnterPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.VkAuth = this.VkAuth.bind(this);\r\n  }\r\n\r\n  VkAuth() {\r\n    VK.Auth.login((res) => {\r\n      if (res.session) {\r\n        console.log(\"success\");\r\n        this.props.onAuth(true);\r\n      } else {\r\n        console.log(\"canceled\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let text = \"Чтобы продолжить, пожалуйста, авторизуйтесь через Вконтакте\";\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"textPage\">\r\n          {text}\r\n          <br/>\r\n          <button className=\"btnMain\" onClick={this.VkAuth}>\r\n    <span style={{ color: 'rgba(0, 0, 0, 0.9)' }}><i class=\"fab fa-vk\"></i>{\" \"}войти</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnterPage;\r\n","import React from \"react\";\r\n\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\n\r\nimport Main from \"./components/main.js\";\r\n\r\nimport \"./App.css\";\r\nimport BookmarksPage from \"./components/BookmarksPage.js\";\r\nimport EnterPage from \"./components/EnterPage.js\";\r\n\r\nconst VK = window.VK;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuth: false,\r\n    };\r\n\r\n    this.setAuth = this.setAuth.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    VK.Auth.getLoginStatus((res) => {\r\n      if (res.status === \"connected\") {\r\n        this.setState({ isAuth: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  setAuth(res) {\r\n    this.setState({ isAuth: res });\r\n  }\r\n\r\n  render() {\r\n    let page = this.state.isAuth ? (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main />\r\n          </Route>\r\n          <Route path=\"/bookmarks\">\r\n            <BookmarksPage onTurnBar={this.turnBar} />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    ) : (\r\n      <EnterPage onAuth={this.setAuth} />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"infoModal\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"exampleModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                  О приложении\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"centeredText\">\r\n                  Приложение создано в\r\n                  <br />\r\n                  <a className=\"linkStyle\" href=\"https://vk.com/warmay_studio\">\r\n                    <b>Май-студии</b>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"aboutModal\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"exampleModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                  О группе\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Самый лучший паблик о мультфильмах\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <img\r\n          className=\"background\"\r\n          src=\"https://wallpaperaccess.com/full/2028393.jpg\"\r\n          alt=\"background\"\r\n        />\r\n        <div className=\"wrapper\">\r\n          {/* <img\r\n            className=\"wrapperBackground\"\r\n            src=\"https://i.pinimg.com/564x/bd/8c/17/bd8c17ee1fddcc9f15917ee86ebea856.jpg\"\r\n            alt=\"background\"\r\n          /> */}\r\n          <div className=\"headerLineTop\">дисней головного мозга</div>\r\n          <div className=\"headerLineBot\">\r\n            <a className=\"linkStyle\" href=\"https://vk.com/magic_page\">\r\n              <div className=\"btnInfo\">\r\n                <i className=\"fas fa-home\"></i> на страницу\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div className=\"headerLeft\"></div>\r\n          <div className=\"headerRight\"></div>\r\n          <div className=\"header\"></div>\r\n          <div className=\"body\">{page}</div>\r\n          <div\r\n            type=\"button\"\r\n            className=\"footer\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#infoModal\"\r\n          >\r\n            о приложении\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}